{"ast":null,"code":"import Button from \"../reusable/Button.vue\";\nimport { ref } from \"vue\";\nexport default {\n  components: {\n    Button\n  },\n  setup() {\n    const endpointUrl = \"https://public.herotofu.com/v1/f96e4c70-07e3-11ee-b0a7-9f000c4c1540\";\n    const FORM_ENDPOINT = ref(endpointUrl);\n    const status = ref();\n    function handleSubmit(e) {\n      e.preventDefault();\n\n      // Anything you need to inject dynamically\n      const injectedData = {\n        DYNAMIC_DATA_EXAMPLE: 123\n      };\n      const inputs = ['name', 'email', 'message'];\n      const data = {};\n      inputs.forEach(inp => {\n        if (inp.name) {\n          data[inp.name] = inp.value;\n        }\n      });\n      Object.assign(data, injectedData);\n      fetch(FORM_ENDPOINT.value, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        // It's likely a spam/bot request, so bypass it to validate via captcha\n        if (response.status === 422) {\n          Object.keys(injectedData).forEach(key => {\n            const el = document.createElement(\"input\");\n            el.type = \"hidden\";\n            el.name = key;\n            el.value = injectedData[key];\n            e.target.appendChild(el);\n          });\n          e.target.submit();\n          throw new Error(\"Please finish the captcha challenge\");\n        }\n        if (response.status !== 200) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      }).then(() => status.value = \"We'll be in touch soon.\").catch(err => status.value = err.toString());\n    }\n    return {\n      status,\n      handleSubmit,\n      FORM_ENDPOINT\n    };\n  }\n};","map":{"version":3,"mappings":"AACA,OAAOA,MAAK,MAAO,wBAAwB;AAE3C,SAASC,GAAE,QAAS,KAAK;AACzB,eAAe;EACbC,UAAU,EAAE;IAAEF;EAAO,CAAC;EAEtBG,KAAK,GAAG;IACN,MAAMC,WAAU,GACd,qEAAqE;IACvE,MAAMC,aAAY,GAAIJ,GAAG,CAACG,WAAW,CAAC;IACtC,MAAME,MAAK,GAAIL,GAAG,EAAE;IAEpB,SAASM,YAAY,CAACC,CAAC,EAAE;MACvBA,CAAC,CAACC,cAAc,EAAE;;MAElB;MACA,MAAMC,YAAW,GAAI;QACnBC,oBAAoB,EAAE;MACxB,CAAC;MAED,MAAMC,MAAK,GAAI,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC;MAC3C,MAAMC,IAAG,GAAI,CAAC,CAAC;MAEfD,MAAM,CAACE,OAAO,CAAEC,GAAG,IAAK;QACtB,IAAIA,GAAG,CAACC,IAAI,EAAE;UACZH,IAAI,CAACE,GAAG,CAACC,IAAI,IAAID,GAAG,CAACE,KAAK;QAC5B;MACF,CAAC,CAAC;MAEFC,MAAM,CAACC,MAAM,CAACN,IAAI,EAAEH,YAAY,CAAC;MAEjCU,KAAK,CAACf,aAAa,CAACY,KAAK,EAAE;QACzBI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,EACEc,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAIA,QAAQ,CAACtB,MAAK,KAAM,GAAG,EAAE;UAC3BY,MAAM,CAACW,IAAI,CAACnB,YAAY,CAAC,CAACI,OAAO,CAAEgB,GAAG,IAAK;YACzC,MAAMC,EAAC,GAAIC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;YAC1CF,EAAE,CAACG,IAAG,GAAI,QAAQ;YAClBH,EAAE,CAACf,IAAG,GAAIc,GAAG;YACbC,EAAE,CAACd,KAAI,GAAIP,YAAY,CAACoB,GAAG,CAAC;YAE5BtB,CAAC,CAAC2B,MAAM,CAACC,WAAW,CAACL,EAAE,CAAC;UAC1B,CAAC,CAAC;UAEFvB,CAAC,CAAC2B,MAAM,CAACE,MAAM,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QAEA,IAAIV,QAAQ,CAACtB,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAM,IAAIgC,KAAK,CAACV,QAAQ,CAACW,UAAU,CAAC;QACtC;QAEA,OAAOX,QAAQ,CAACY,IAAI,EAAE;MACxB,CAAC,EACAb,IAAI,CAAC,MAAOrB,MAAM,CAACW,KAAI,GAAI,yBAA0B,EACrDwB,KAAK,CAAEC,GAAG,IAAMpC,MAAM,CAACW,KAAI,GAAIyB,GAAG,CAACC,QAAQ,EAAG,CAAC;IACpD;IAEA,OAAO;MAAErC,MAAM;MAAEC,YAAY;MAAEF;IAAc,CAAC;EAChD;AACF,CAAC","names":["Button","ref","components","setup","endpointUrl","FORM_ENDPOINT","status","handleSubmit","e","preventDefault","injectedData","DYNAMIC_DATA_EXAMPLE","inputs","data","forEach","inp","name","value","Object","assign","fetch","method","headers","Accept","body","JSON","stringify","then","response","keys","key","el","document","createElement","type","target","appendChild","submit","Error","statusText","json","catch","err","toString"],"sourceRoot":"","sources":["/Users/francopaolodonatilara/Desktop/portfolio-vue/src/components/contact/ContactForm.vue"],"sourcesContent":["<script>\nimport Button from \"../reusable/Button.vue\";\n\nimport { ref } from \"vue\";\nexport default {\n  components: { Button },\n\n  setup() {\n    const endpointUrl =\n      \"https://public.herotofu.com/v1/f96e4c70-07e3-11ee-b0a7-9f000c4c1540\";\n    const FORM_ENDPOINT = ref(endpointUrl);\n    const status = ref();\n\n    function handleSubmit(e) {\n      e.preventDefault();\n\n      // Anything you need to inject dynamically\n      const injectedData = {\n        DYNAMIC_DATA_EXAMPLE: 123,\n      };\n\n      const inputs = ['name', 'email', 'message'];\n      const data = {};\n\n      inputs.forEach((inp) => {\n        if (inp.name) {\n          data[inp.name] = inp.value;\n        }\n      });\n\n      Object.assign(data, injectedData);\n\n      fetch(FORM_ENDPOINT.value, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          // It's likely a spam/bot request, so bypass it to validate via captcha\n          if (response.status === 422) {\n            Object.keys(injectedData).forEach((key) => {\n              const el = document.createElement(\"input\");\n              el.type = \"hidden\";\n              el.name = key;\n              el.value = injectedData[key];\n\n              e.target.appendChild(el);\n            });\n\n            e.target.submit();\n            throw new Error(\"Please finish the captcha challenge\");\n          }\n\n          if (response.status !== 200) {\n            throw new Error(response.statusText);\n          }\n\n          return response.json();\n        })\n        .then(() => (status.value = \"We'll be in touch soon.\"))\n        .catch((err) => (status.value = err.toString()));\n    }\n\n    return { status, handleSubmit, FORM_ENDPOINT };\n  },\n};\n</script>\n\n<template>\n  <div class=\"w-full md:w-1/2\">\n    <div\n      class=\"leading-loose max-w-xl m-4 p-7 bg-secondary-light dark:bg-secondary-dark rounded-xl shadow-xl text-left\"\n    >\n      <p\n        class=\"font-general-medium text-primary-dark dark:text-primary-light text-2xl mb-8\"\n      >\n        Contact Form\n      </p>\n      <form\n        :action=\"FORM_ENDPOINT\"\n        @submit=\"handleSubmit\"\n        method=\"POST\"\n        class=\"font-general-regular space-y-1\"\n      >\n\t  \t<div>\n\t\t\tFull Name\n        <input\n          type=\"text\"\n          placeholder=\"Your name\"\n          name=\"name\"\n          class=\"w-full px-5 py-3 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n          required\n        />\n\n\t\t</div>\n        Email\n\t\t\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n\t\t\tclass=\"w-full px-5 py-3 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n            required\n          />\n        Message\n          <input\n            type=\"text\"\n            placeholder=\"Message\"\n            name=\"message\"\n\t\t\tclass=\"w-full px-5 py-3 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n            required\n          />\n\n        <div>\n          <Button\n            title=\"Send Message\"\n            class=\"px-4 py-2.5 text-white tracking-wider bg-indigo-500 hover:bg-indigo-600 focus:ring-1 focus:ring-indigo-900 rounded-lg duration-500\"\n            type=\"submit\"\n            aria-label=\"Send Message\"\n          />\n        </div>\n      </form>\n      <div v-if=\"status\" class=\"text-center mt-10\">\n        <h2 class=\"text-2xl\">Thanks you!</h2>\n        <div class=\"text-md\">{{ status }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}