{"ast":null,"code":"import Button from '../reusable/Button.vue';\nimport FormInput from '../reusable/FormInput.vue';\nimport FormTextarea from '../reusable/FormTextarea.vue';\nimport { ref } from \"vue\";\nexport default {\n  setup() {\n    const endpointUrl = 'https://public.herotofu.com/v1/f96e4c70-07e3-11ee-b0a7-9f000c4c1540';\n    const FORM_ENDPOINT = ref(endpointUrl);\n    const status = ref();\n    function handleSubmit(e) {\n      e.preventDefault();\n\n      // Anything you need to inject dynamically\n      const injectedData = {\n        DYNAMIC_DATA_EXAMPLE: 123\n      };\n      const inputs = e.target.elements;\n      const data = {};\n      inputs.forEach(inp => {\n        if (inp.name) {\n          data[inp.name] = inp.value;\n        }\n      });\n      Object.assign(data, injectedData);\n      fetch(FORM_ENDPOINT.value, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        // It's likely a spam/bot request, so bypass it to validate via captcha\n        if (response.status === 422) {\n          Object.keys(injectedData).forEach(key => {\n            const el = document.createElement(\"input\");\n            el.type = \"hidden\";\n            el.name = key;\n            el.value = injectedData[key];\n            e.target.appendChild(el);\n          });\n          e.target.submit();\n          throw new Error(\"Please finish the captcha challenge\");\n        }\n        if (response.status !== 200) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      }).then(() => status.value = \"We'll be in touch soon.\").catch(err => status.value = err.toString());\n    }\n    return {\n      status,\n      handleSubmit,\n      FORM_ENDPOINT\n    };\n  },\n  // To Add Tailwind\n  beforeCreate() {\n    if (document) {\n      const stylesheet = document.createElement(\"link\");\n      stylesheet.rel = \"stylesheet\";\n      stylesheet.href = \"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\";\n      document.head.appendChild(stylesheet);\n    }\n  }\n};","map":{"version":3,"mappings":"AACA,OAAOA,MAAK,MAAO,wBAAwB;AAC3C,OAAOC,SAAQ,MAAO,2BAA2B;AACjD,OAAOC,YAAW,MAAO,8BAA8B;AAErD,SAASC,GAAE,QAAS,KAAK;AACzB,eAAe;EAGbC,KAAK,GAAG;IACN,MAAMC,WAAU,GAAI,qEAAqE;IACzF,MAAMC,aAAY,GAAIH,GAAG,CAACE,WAAW,CAAC;IACtC,MAAME,MAAK,GAAIJ,GAAG,EAAE;IAEpB,SAASK,YAAY,CAACC,CAAC,EAAE;MACvBA,CAAC,CAACC,cAAc,EAAE;;MAElB;MACA,MAAMC,YAAW,GAAI;QACnBC,oBAAoB,EAAE;MACxB,CAAC;MAED,MAAMC,MAAK,GAAIJ,CAAC,CAACK,MAAM,CAACC,QAAQ;MAChC,MAAMC,IAAG,GAAI,CAAC,CAAC;MAEfH,MAAM,CAACI,OAAO,CAAEC,GAAG,IAAK;QACtB,IAAIA,GAAG,CAACC,IAAI,EAAE;UACZH,IAAI,CAACE,GAAG,CAACC,IAAI,IAAID,GAAG,CAACE,KAAK;QAC5B;MACF,CAAC,CAAC;MAEFC,MAAM,CAACC,MAAM,CAACN,IAAI,EAAEL,YAAY,CAAC;MAEjCY,KAAK,CAACjB,aAAa,CAACc,KAAK,EAAE;QACzBI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,EACEc,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAIA,QAAQ,CAACxB,MAAK,KAAM,GAAG,EAAE;UAC3Bc,MAAM,CAACW,IAAI,CAACrB,YAAY,CAAC,CAACM,OAAO,CAAEgB,GAAG,IAAK;YACzC,MAAMC,EAAC,GAAIC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;YAC1CF,EAAE,CAACG,IAAG,GAAI,QAAQ;YAClBH,EAAE,CAACf,IAAG,GAAIc,GAAG;YACbC,EAAE,CAACd,KAAI,GAAIT,YAAY,CAACsB,GAAG,CAAC;YAE5BxB,CAAC,CAACK,MAAM,CAACwB,WAAW,CAACJ,EAAE,CAAC;UAC1B,CAAC,CAAC;UAEFzB,CAAC,CAACK,MAAM,CAACyB,MAAM,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QAEA,IAAIT,QAAQ,CAACxB,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAM,IAAIiC,KAAK,CAACT,QAAQ,CAACU,UAAU,CAAC;QACtC;QAEA,OAAOV,QAAQ,CAACW,IAAI,EAAE;MACxB,CAAC,EACAZ,IAAI,CAAC,MAAOvB,MAAM,CAACa,KAAI,GAAI,yBAA0B,EACrDuB,KAAK,CAAEC,GAAG,IAAMrC,MAAM,CAACa,KAAI,GAAIwB,GAAG,CAACC,QAAQ,EAAG,CAAC;IACpD;IAEA,OAAO;MAAEtC,MAAM;MAAEC,YAAY;MAAEF;IAAc,CAAC;EAChD,CAAC;EAAE;EACHwC,YAAY,GAAG;IACb,IAAIX,QAAQ,EAAE;MACZ,MAAMY,UAAS,GAAIZ,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MACjDW,UAAU,CAACC,GAAE,GAAI,YAAY;MAC7BD,UAAU,CAACE,IAAG,GACZ,wDAAwD;MAE1Dd,QAAQ,CAACe,IAAI,CAACZ,WAAW,CAACS,UAAU,CAAC;IACvC;EACF;AACF,CAAC","names":["Button","FormInput","FormTextarea","ref","setup","endpointUrl","FORM_ENDPOINT","status","handleSubmit","e","preventDefault","injectedData","DYNAMIC_DATA_EXAMPLE","inputs","target","elements","data","forEach","inp","name","value","Object","assign","fetch","method","headers","Accept","body","JSON","stringify","then","response","keys","key","el","document","createElement","type","appendChild","submit","Error","statusText","json","catch","err","toString","beforeCreate","stylesheet","rel","href","head"],"sourceRoot":"","sources":["/Users/francopaolodonatilara/Desktop/portfolio-vue/src/components/contact/ContactForm.vue"],"sourcesContent":["<script>\nimport Button from '../reusable/Button.vue';\nimport FormInput from '../reusable/FormInput.vue';\nimport FormTextarea from '../reusable/FormTextarea.vue';\n\n  import { ref } from \"vue\";\n  export default {\n\n\t\n    setup() {\n      const endpointUrl = 'https://public.herotofu.com/v1/f96e4c70-07e3-11ee-b0a7-9f000c4c1540';\n      const FORM_ENDPOINT = ref(endpointUrl);\n      const status = ref();\n\n      function handleSubmit(e) {\n        e.preventDefault();\n\n        // Anything you need to inject dynamically\n        const injectedData = {\n          DYNAMIC_DATA_EXAMPLE: 123,\n        };\n\n        const inputs = e.target.elements;\n        const data = {};\n\n        inputs.forEach((inp) => {\n          if (inp.name) {\n            data[inp.name] = inp.value;\n          }\n        });\n\n        Object.assign(data, injectedData);\n\n        fetch(FORM_ENDPOINT.value, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data),\n        })\n          .then((response) => {\n            // It's likely a spam/bot request, so bypass it to validate via captcha\n            if (response.status === 422) {\n              Object.keys(injectedData).forEach((key) => {\n                const el = document.createElement(\"input\");\n                el.type = \"hidden\";\n                el.name = key;\n                el.value = injectedData[key];\n\n                e.target.appendChild(el);\n              });\n\n              e.target.submit();\n              throw new Error(\"Please finish the captcha challenge\");\n            }\n\n            if (response.status !== 200) {\n              throw new Error(response.statusText);\n            }\n\n            return response.json();\n          })\n          .then(() => (status.value = \"We'll be in touch soon.\"))\n          .catch((err) => (status.value = err.toString()));\n      }\n\n      return { status, handleSubmit, FORM_ENDPOINT };\n    }, // To Add Tailwind\n    beforeCreate() {\n      if (document) {\n        const stylesheet = document.createElement(\"link\");\n        stylesheet.rel = \"stylesheet\";\n        stylesheet.href =\n          \"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\";\n\n        document.head.appendChild(stylesheet);\n      }\n    },\n  };\n</script>\n\n<template>\n  <div class=\"w-full md:w-1/2\">\n    <div\n      class=\"leading-loose max-w-xl m-4 p-7 bg-secondary-light dark:bg-secondary-dark rounded-xl shadow-xl text-left\"\n    >\n      <p\n        class=\"font-general-medium text-primary-dark dark:text-primary-light text-2xl mb-8\"\n      >\n        Contact Form\n      </p>\n      <form action=\"#\" class=\"font-general-regular space-y-7\">\n        <FormInput label=\"Full Name\" inputIdentifier=\"name\" />\n        <FormInput label=\"Email\" inputIdentifier=\"email\" inputType=\"email\" />\n        <FormInput label=\"Subject\" inputIdentifier=\"subject\" />\n        <FormTextarea label=\"Message\" textareaIdentifier=\"message\" />\n\n        <div>\n          <Button\n            title=\"Send Message\"\n            class=\"px-4 py-2.5 text-white tracking-wider bg-indigo-500 hover:bg-indigo-600 focus:ring-1 focus:ring-indigo-900 rounded-lg duration-500\"\n            type=\"submit\"\n            aria-label=\"Send Message\"\n          />\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}